{"version":3,"sources":["components/Card/index.js","components/Navbar/index.js","components/Jumbotron/index.js","components/Game/index.js","App.js","index.js"],"names":["Card","props","react_default","a","createElement","className","onClick","handleClick","id","src","image","alt","name","Nav","concat","primaryHeadingText","primaryHeadingValue","secondaryHeadingText","secondaryHeadingValue","Jumbotron","Game","state","score","highScore","cardData","clickedList","_this$state","_this","shuffleCards","includes","bestScore","Math","max","resetGame","newScore","setState","Object","toConsumableArray","length","array","i","j","floor","random","temp","this","_this2","Navbar","components_Jumbotron","class","map","card","components_Card","key","Component","App","components_Game","ReactDOM","render","src_App","document","getElementById"],"mappings":"y9BAYeA,MATf,SAAcC,GACV,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfC,QAAS,kBAAML,EAAMM,YAAYN,EAAMO,MACnCN,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMS,MAAOC,IAAKV,EAAMW,sBCM/BC,MAVf,SAAaZ,GACT,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,aAAAU,OAAQb,EAAMc,mBAAd,KAAAD,OAAoCb,EAAMe,sBAC1Cd,EAAAC,EAAAC,cAAA,aAAAU,OAAQb,EAAMgB,qBAAd,KAAAH,OAAsCb,EAAMiB,gCCKrCC,MAVf,WACE,OACEjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACbH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,yHC+ESgB,oNA7EXC,MAAQ,CACJC,MAAO,EACPC,UAAW,EACXC,WACAC,YAAa,MAQjBlB,YAAc,SAACC,GAAO,IAAAkB,EACiCC,EAAKN,MAAhDC,EADUI,EACVJ,MAAOG,EADGC,EACHD,YAAaD,EADVE,EACUF,SAAUD,EADpBG,EACoBH,UAGtC,GAFAI,EAAKC,aAAaJ,GACKC,EAAYI,SAASrB,GACxB,CAChB,IAAMsB,EAAYC,KAAKC,IAAIV,EAAOC,GAClCI,EAAKM,UAAUH,OACZ,CACH,IAAMI,EAAWZ,EAAQ,EACzBK,EAAKQ,SAAS,CACVb,MAAOA,EAAQ,EACfG,YAAW,GAAAX,OAAAsB,OAAAC,EAAA,EAAAD,CAAMX,GAAN,CAAmBjB,MAE9B0B,IAAaV,EAASc,QACtBX,EAAKM,UAAUC,OAI3BD,UAAY,SAAAV,GACRI,EAAKQ,SAAS,CACVb,MAAO,EACPG,YAAa,GACbF,UAAWA,OAInBK,aAAe,SAACW,GACZ,IAAK,IAAIC,EAAID,EAAMD,OAAS,EAAGE,EAAI,EAAGA,IAAK,CACvC,IAAIC,EAAIV,KAAKW,MAAMX,KAAKY,UAAYH,EAAI,IACpCI,EAAOL,EAAMC,GACjBD,EAAMC,GAAKD,EAAME,GACjBF,EAAME,GAAKG,EAGfjB,EAAKQ,SAAS,CACVX,SAASY,OAAAC,EAAA,EAAAD,CAAKG,yFAxCF,IACRf,EAAYqB,KAAKxB,MAAjBG,SACRqB,KAAKjB,aAAaJ,oCA0Cb,IAAAsB,EAAAD,KACL,OACI3C,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC2C,EAAD,CACAhC,mBAAmB,SACnBC,oBAAqB6B,KAAKxB,MAAMC,MAChCL,qBAAqB,cACrBC,sBAAuB2B,KAAKxB,MAAME,YAElCrB,EAAAC,EAAAC,cAAC4C,EAAD,MACA9C,EAAAC,EAAAC,cAAA,OAAK6C,MAAM,SACVJ,KAAKxB,MAAMG,SAAS0B,IAAI,SAACC,GAAD,OACrBjD,EAAAC,EAAAC,cAACgD,EAAD,CACIxC,KAAMuC,EAAKvC,KACXF,MAAOyC,EAAKzC,MACZ2C,IAAKF,EAAK3C,GACVA,GAAI2C,EAAK3C,GACTD,YAAauC,EAAKvC,yBAtEvB+C,cCIJC,mLANZ,OACErD,EAAAC,EAAAC,cAACoD,EAAD,aAHaF,aCElBG,IAASC,OAAOxD,EAAAC,EAAAC,cAACuD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.792ad5eb.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.scss\";\n\nfunction Card(props) {\n    return (\n        <div className=\"card\"\n        onClick={() => props.handleClick(props.id)}>\n            <img src={props.image} alt={props.name} />\n        </div>\n    )\n}\n\nexport default Card;","import React from \"react\";\nimport \"./nav.scss\";\n\nfunction Nav(props) {\n    return (\n        <nav className=\"navbar\">\n        <h2>Clicky Game</h2>\n        <h2>{`${props.primaryHeadingText} ${props.primaryHeadingValue}`}</h2>\n        <h2>{`${props.secondaryHeadingText} ${props.secondaryHeadingValue}`}</h2>\n        </nav>\n    )\n}\n\nexport default Nav;","import React from \"react\";\nimport \"./style.scss\"\n\nfunction Jumbotron() {\n  return (\n    <div className=\"jumbotron jumbotron-fluid\">\n      <h1>How to play:</h1>\n      <p>\n        Click on an image to earn points, but don't click on any more than once. Try to get all 12 without losing!\n      </p>\n    </div>\n  );\n}\nexport default Jumbotron;","import React, { Component } from \"react\";\nimport Card from \"../Card\";\nimport cardData from \"../../cards.json\";\nimport Nav from \"../Navbar\";\nimport Jumbotron from \"../Jumbotron\";\nimport './style.scss';\n\nclass Game extends Component {\n\n    state = {\n        score: 0,\n        highScore: 0,\n        cardData,\n        clickedList: []\n    }\n\n    componentDidMount() {\n        const { cardData} = this.state;\n        this.shuffleCards(cardData);\n    }\n\n    handleClick = (id) => {\n        const { score, clickedList, cardData, highScore} = this.state;\n        this.shuffleCards(cardData)\n        const alreadyClicked = clickedList.includes(id);\n        if (alreadyClicked) {\n            const bestScore = Math.max(score, highScore)\n            this.resetGame(bestScore);\n        } else {\n            const newScore = score + 1;\n            this.setState({\n                score: score + 1,\n                clickedList: [...clickedList, id]\n            })\n            if (newScore === cardData.length) \n                this.resetGame(newScore);\n        }\n    }\n\n    resetGame = highScore => {\n        this.setState({\n            score: 0,\n            clickedList: [],\n            highScore: highScore\n        })\n    } \n\n    shuffleCards = (array) => {\n        for (var i = array.length - 1; i > 0; i--) {\n            var j = Math.floor(Math.random() * (i + 1));\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n\n        this.setState({\n            cardData: [...array]\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <Nav \n                primaryHeadingText=\"Score:\"\n                primaryHeadingValue={this.state.score}\n                secondaryHeadingText=\"High Score:\"\n                secondaryHeadingValue={this.state.highScore}\n                />\n                <Jumbotron />\n                <div class=\"cards\">\n                {this.state.cardData.map((card) => (\n                    <Card\n                        name={card.name}\n                        image={card.image}\n                        key={card.id}\n                        id={card.id}\n                        handleClick={this.handleClick}\n                    />\n                ))}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Game;","import React, { Component } from 'react';\nimport Game from \"./components/Game\";\n\nclass App extends Component {\n render() {\n   return (\n     <Game />\n   );\n }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n// component and where to put it \"root\" //\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}